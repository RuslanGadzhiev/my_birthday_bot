import random
import time

from aiogram import Router
from aiogram.filters import Command, CommandStart, Text
from aiogram.types import Message, FSInputFile
from lexicon.lexicon import LEXICON_RU, LEXICON_NAMES_RU
from config_data.config import load_names
from keyboards.keyboards import game_kb, start_kb, vanga_kb, luser_kb

from services.services import get_bot_choice, get_winner


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router: Router = Router()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(text=LEXICON_RU['/start'], reply_markup=start_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@router.message(Command(commands='help'))
async def process_help_command(message: Message):
    await message.answer(text=LEXICON_RU['/help'], reply_markup=start_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É - "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
@router.message(Text(text=LEXICON_RU['info']))
async def process_info_answer(message: Message):
    await message.answer(text=LEXICON_RU['address'], reply_markup=start_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ —Å–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É
@router.message(Text(text=LEXICON_RU['knb']))
async def process_knb_answer(message: Message):
    await message.answer(text=LEXICON_RU['yes'], reply_markup=game_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –ª—é–±—É—é –∏–∑ –∏–≥—Ä–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
@router.message(Text(text=[LEXICON_RU['rock'],
                           LEXICON_RU['paper'],
                           LEXICON_RU['scissors']]))
async def process_game_button(message: Message):
    bot_choice = get_bot_choice()
    await message.answer(text=f'{LEXICON_RU["bot_choice"]} '
                              f'- {LEXICON_RU[bot_choice]}')
    winner = get_winner(message.text, bot_choice)
    await message.answer(text=LEXICON_RU[winner], reply_markup=start_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É - "–£–≥–∞–¥–∞–π-–∫–∞"
@router.message(Text(text=[LEXICON_RU['vanga']]))
async def process_vanga_button(message: Message):
    await message.answer(text=LEXICON_RU['want'], reply_markup=vanga_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É - "–£–≥–∞–¥–∞–π-–∫–∞" - "–•–æ—á—É—É—É!))"
@router.message(Text(text=[LEXICON_RU['i_want']]))
async def process_i_want_button(message: Message):
    name_key = load_names()
    # print(name_key)
    # print(name_key[str(message.from_user.id)])
    await message.answer(text=LEXICON_NAMES_RU[name_key[str(message.from_user.id)]], reply_markup=start_kb)

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É - "–£–≥–∞–¥–∞–π-–∫–∞" - "–ù—É –Ω–∞ —Ö–µ—Ä!"
@router.message(Text(text=[LEXICON_RU['not_want']]))
async def process_i_want_button(message: Message):
    nu_nah = FSInputFile('gifs/nu_naher.gif')
    await message.answer(text=LEXICON_RU['nu_nah'], reply_markup=start_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É - "–õ—É–∑–µ—Ä"
@router.message(Text(text=[LEXICON_RU['luser']]))
async def process_vanga_button(message: Message):
    await message.answer(text=LEXICON_RU['luser_go'], reply_markup=luser_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–Ω–∞–ª–∏"
@router.message(Text(text=[LEXICON_RU['go']]))
async def process_game_button(message: Message):
    losers: list[str] = ['–†—É—Å', '–≠–ª—å–¥–æ—Å', '–õ–µ—Ö–∞', '–í–∞–¥–æ—Å', '–û–ª–µ–≥', '–ú–∞–∫—Å', '–ê–Ω–¥—Ä—é—Ö–∞ –•', '–ê–Ω–¥—Ä—é—Ö–∞ –ß']
    while len(losers) > 1:
        not_lose = random.choice(losers)
        losers.pop(losers.index(not_lose))
        time.sleep(1)
        await message.answer(text=f'{not_lose} - –Ω–µ –ª—É–∑–µ—Ä)')
    else:
        await message.answer(text=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é - {losers.pop()} - –¢—ã –õ–æ—à–∞—Ä–∞!!! üöΩ', reply_markup=start_kb)
